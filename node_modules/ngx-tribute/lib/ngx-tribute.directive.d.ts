import { ElementRef, EventEmitter, OnInit, OnDestroy } from '@angular/core';
import { FormControl, FormControlDirective, FormControlName, NgModel } from '@angular/forms';
import Tribute, { TributeOptions } from 'tributejs';
import * as ɵngcc0 from '@angular/core';
export declare class NgxTributeDirective<T> implements OnInit, OnDestroy {
    private element;
    private formControlName;
    private formControlDirective;
    private ngModelDirective;
    options: TributeOptions<T>;
    menuContainer: HTMLElement;
    implicitFormControl: FormControl;
    onMentioned: EventEmitter<string>;
    mentionItemSelected: EventEmitter<any>;
    tribute: Tribute<T>;
    constructor(element: ElementRef, formControlName: FormControlName, formControlDirective: FormControlDirective, ngModelDirective: NgModel);
    readonly control: FormControl;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxTributeDirective<any>, [null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxTributeDirective<any>, "[ngxTribute]", ["ngx-tribute"], { "options": "ngxTribute"; "menuContainer": "menuContainer"; "implicitFormControl": "implicitFormControl"; }, { "onMentioned": "onMentioned"; "mentionItemSelected": "mentionItemSelected"; }, never>;
}

//# sourceMappingURL=ngx-tribute.directive.d.ts.map
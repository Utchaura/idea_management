{"version":3,"file":"ngx-file-drag-drop.component.d.ts","sources":["ngx-file-drag-drop.component.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\r\nexport declare class NgxFileDragDropComponent implements ControlValueAccessor {\r\n    constructor();\r\n    get disabled(): boolean;\r\n    set disabled(val: boolean);\r\n    set multiple(value: boolean);\r\n    get multiple(): boolean;\r\n    set displayFileSize(value: boolean);\r\n    get displayFileSize(): boolean;\r\n    set borderColor(color: string);\r\n    get borderColor(): string;\r\n    get files(): File[];\r\n    get isEmpty(): boolean;\r\n    get isDragover(): boolean;\r\n    set isDragover(value: boolean);\r\n    private valueChanged;\r\n    private fileInputEl;\r\n    accept: string;\r\n    private _disabled;\r\n    _multiple: boolean;\r\n    emptyPlaceholder: string;\r\n    private _displayFileSize;\r\n    private _activeBorderColor;\r\n    private _files;\r\n    private _isDragOver;\r\n    private _onChange;\r\n    private _onTouched;\r\n    writeValue(files: File[]): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState?(isDisabled: boolean): void;\r\n    private emitChanges;\r\n    addFiles(files: File[] | FileList | File): void;\r\n    removeFile(file: File): void;\r\n    clear(): void;\r\n    change(event: Event): void;\r\n    activate(e: any): void;\r\n    deactivate(e: any): void;\r\n    handleDrop(e: any): void;\r\n    open(): void;\r\n    private removeDirectories;\r\n    private convertToArray;\r\n    getFileName(file: File): string;\r\n}\r\n"]}
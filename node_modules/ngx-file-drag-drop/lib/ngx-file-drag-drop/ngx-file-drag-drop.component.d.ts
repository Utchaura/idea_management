import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class NgxFileDragDropComponent implements ControlValueAccessor {
    constructor();
    get disabled(): boolean;
    set disabled(val: boolean);
    set multiple(value: boolean);
    get multiple(): boolean;
    set displayFileSize(value: boolean);
    get displayFileSize(): boolean;
    set borderColor(color: string);
    get borderColor(): string;
    get files(): File[];
    get isEmpty(): boolean;
    get isDragover(): boolean;
    set isDragover(value: boolean);
    private valueChanged;
    private fileInputEl;
    accept: string;
    private _disabled;
    _multiple: boolean;
    emptyPlaceholder: string;
    private _displayFileSize;
    private _activeBorderColor;
    private _files;
    private _isDragOver;
    private _onChange;
    private _onTouched;
    writeValue(files: File[]): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    private emitChanges;
    addFiles(files: File[] | FileList | File): void;
    removeFile(file: File): void;
    clear(): void;
    change(event: Event): void;
    activate(e: any): void;
    deactivate(e: any): void;
    handleDrop(e: any): void;
    open(): void;
    private removeDirectories;
    private convertToArray;
    getFileName(file: File): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxFileDragDropComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxFileDragDropComponent, "ngx-file-drag-drop", never, { "accept": "accept"; "emptyPlaceholder": "emptyPlaceholder"; "disabled": "disabled"; "multiple": "multiple"; "displayFileSize": "displayFileSize"; "borderColor": "activeBorderColor"; }, { "valueChanged": "valueChanged"; }, never, never>;
}

//# sourceMappingURL=ngx-file-drag-drop.component.d.ts.map
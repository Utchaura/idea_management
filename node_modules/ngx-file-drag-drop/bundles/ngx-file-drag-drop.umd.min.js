!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/cdk/coercion"),require("@angular/common"),require("@angular/material/chips"),require("@angular/material/icon"),require("@angular/material/tooltip")):"function"==typeof define&&define.amd?define("ngx-file-drag-drop",["exports","@angular/core","@angular/forms","@angular/cdk/coercion","@angular/common","@angular/material/chips","@angular/material/icon","@angular/material/tooltip"],t):t((e=e||self)["ngx-file-drag-drop"]={},e.ng.core,e.ng.forms,e.ng.cdk.coercion,e.ng.common,e.ng.material.chips,e.ng.material.icon,e.ng.material.tooltip)}(this,(function(e,t,i,r,n,o,a,l){"use strict";var s=function(){function e(){this.unit="Bytes"}return e.prototype.transform=function(e,t){return e=e.toString(),parseInt(e,10)>=0&&(e=this.formatBytes(+e,+t)),e},e.prototype.formatBytes=function(e,t){if(void 0===t&&(t=2),0===e)return"0 Bytes";var i=t<0?0:t,r=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,r)).toFixed(i))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][r]},e}();s.decorators=[{type:t.Pipe,args:[{name:"byte"}]}];var u=function(){function e(){this.valueChanged=new t.EventEmitter,this.accept="*",this._disabled=!1,this._multiple=!1,this.emptyPlaceholder="Drop file"+(this.multiple?"s":"")+" or click to select",this._displayFileSize=!1,this._activeBorderColor="purple",this._files=[],this._isDragOver=!1,this._onChange=function(e){},this._onTouched=function(){}}return Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=r.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"multiple",{get:function(){return this._multiple},set:function(e){this._multiple=r.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"displayFileSize",{get:function(){return this._displayFileSize},set:function(e){this._displayFileSize=r.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderColor",{get:function(){return this.isDragover?this._activeBorderColor:"#ccc"},set:function(e){this._activeBorderColor=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"files",{get:function(){return this._files},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isEmpty",{get:function(){var e;return!(null===(e=this.files)||void 0===e?void 0:e.length)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isDragover",{get:function(){return this._isDragOver},set:function(e){this.disabled||(this._isDragOver=e)},enumerable:!1,configurable:!0}),e.prototype.writeValue=function(e){var t=this.convertToArray(e);if(!(t.length<2||this.multiple))throw Error("Multiple files not allowed");this._files=t,this.emitChanges(this._files)},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype.emitChanges=function(e){this.valueChanged.emit(e),this._onChange(e)},e.prototype.addFiles=function(e){var t=this.convertToArray(e);if(this.multiple){var i=this.files.concat(t);this.writeValue(i)}else this.writeValue(t)},e.prototype.removeFile=function(e){var t=this.files.indexOf(e);if(t>=0){var i=this.files.slice();i.splice(t,1),this.writeValue(i)}},e.prototype.clear=function(){this.writeValue([])},e.prototype.change=function(e){e.stopPropagation(),this._onTouched();var t=e.target.files;(null==t?void 0:t.length)&&this.addFiles(t),e.target.value=""},e.prototype.activate=function(e){e.preventDefault(),this.isDragover=!0},e.prototype.deactivate=function(e){e.preventDefault(),this.isDragover=!1},e.prototype.handleDrop=function(e){var t=this;if(this.deactivate(e),!this.disabled){var i=e.dataTransfer.files;this.removeDirectories(i).then((function(e){(null==e?void 0:e.length)&&t.addFiles(e),t._onTouched()}))}},e.prototype.open=function(){var e;this.disabled||null===(e=this.fileInputEl)||void 0===e||e.nativeElement.click()},e.prototype.removeDirectories=function(e){var t=this;return new Promise((function(i,r){for(var n=t.convertToArray(e),o=[],a=[],l=function(e){var t=new FileReader;t.onerror=function(){o.push(n[e].name)},t.onloadend=function(){return t=e,a.push(t),void(a.length===n.length&&i(n.filter((function(e){return!o.includes(e.name)}))));var t},t.readAsArrayBuffer(n[e])},s=0;s<n.length;s++)l(s)}))},e.prototype.convertToArray=function(e){return e?e instanceof File?[e]:Array.isArray(e)?e:Array.prototype.slice.call(e):[]},e.prototype.getFileName=function(e){if(!this._displayFileSize)return e.name;var t=(new s).transform(e.size);return e.name+" ("+t+")"},e}();u.decorators=[{type:t.Component,args:[{selector:"ngx-file-drag-drop",template:'<mat-chip-list *ngIf="files.length" selectable="false">\r\n    <mat-chip matTooltip={{file.size|byte}} matTooltipPosition="below" [matTooltipDisabled]="displayFileSize" selected\r\n        *ngFor="let file of files" [disabled]="disabled" color="accent" disableRipple="true" [removable]="!disabled"\r\n        (removed)="removeFile(file)">\r\n        <span class="filename">{{getFileName(file)}}</span>\r\n        <mat-icon *ngIf="!disabled" matChipRemove>cancel</mat-icon>\r\n    </mat-chip>\r\n</mat-chip-list>\r\n<span class="placeholder" *ngIf="!files.length">{{emptyPlaceholder}}</span>\r\n<input #fileInputEl class="hidden" #fileInput type="file" [attr.multiple]="multiple? \'\' : null" [attr.accept]="accept">',providers:[{provide:i.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return u})),multi:!0}],styles:["input{height:0;opacity:0;overflow:hidden;position:absolute;width:0;z-index:-1}:host{border:2px dashed;border-radius:20px;cursor:pointer;display:block;margin:10px auto;max-width:500px;min-height:50px;padding:20px}:host.disabled{cursor:unset;opacity:.5}.placeholder{color:grey;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}mat-chip{max-width:100%}.filename{max-width:calc(100% - 1em);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host.empty-input{align-items:center;display:flex;justify-content:center}.mat-chip.mat-standard-chip.mat-focus-indicator{box-shadow:none}.mat-chip.mat-standard-chip:after{background:unset}"]}]}],u.ctorParameters=function(){return[]},u.propDecorators={disabled:[{type:t.HostBinding,args:["class.disabled"]},{type:t.Input}],multiple:[{type:t.Input}],displayFileSize:[{type:t.Input}],borderColor:[{type:t.Input,args:["activeBorderColor"]},{type:t.HostBinding,args:["style.border-color"]}],isEmpty:[{type:t.HostBinding,args:["class.empty-input"]}],valueChanged:[{type:t.Output}],fileInputEl:[{type:t.ViewChild,args:["fileInputEl"]}],accept:[{type:t.Input}],emptyPlaceholder:[{type:t.Input}],change:[{type:t.HostListener,args:["change",["$event"]]}],activate:[{type:t.HostListener,args:["dragenter",["$event"]]},{type:t.HostListener,args:["dragover",["$event"]]}],deactivate:[{type:t.HostListener,args:["dragleave",["$event"]]}],handleDrop:[{type:t.HostListener,args:["drop",["$event"]]}],open:[{type:t.HostListener,args:["click"]}]};var c=function(){};c.decorators=[{type:t.NgModule,args:[{declarations:[u,s],imports:[n.CommonModule,o.MatChipsModule,a.MatIconModule,l.MatTooltipModule],exports:[u,s]}]}];var p=function(){function e(){}return e.fileExtension=function(e){return function(t){var i=e.map((function(e){return e.trim().toLowerCase()})),r=t.value.map((function(e){return e.name})).filter((function(e){var t=e.slice(2+(e.lastIndexOf(".")-1>>>0)).toLowerCase();return!i.includes(t)})).map((function(e){return{name:e,ext:e.slice(2+(e.lastIndexOf(".")-1>>>0))}}));return r.length?{fileExtension:{requiredExtension:e.toString(),actualExtensions:r}}:null}},e.uniqueFileNames=function(e){var t=e.value.map((function(e){return e.name})).reduce((function(e,t){return e[t]=e[t]?e[t]+1:1,e}),{}),i=Object.entries(t).filter((function(e){return e[1]>1})).map((function(e){return{name:e[0],count:e[1]}}));return i.length?{uniqueFileNames:{duplicatedFileNames:i}}:null},e.fileType=function(e){return function(t){var i;if(Array.isArray(e)){var r=e.join("$|^");i=new RegExp("$"+r+"^","i")}else i=e;var n=t.value.filter((function(e){return!i.test(e.type)})).map((function(e){return{name:e.name,type:e.type}}));return n.length?{fileType:{requiredType:e.toString(),actualTypes:n}}:null}},e.maxFileCount=function(e){return function(t){var i=(null==t?void 0:t.value)?t.value.length:0;return e>=i?null:{maxFileCount:{maxCount:e,actualCount:i}}}},e.maxFileSize=function(e){return function(t){var i=t.value.filter((function(t){return t.size>e})).map((function(e){return{name:e.name,size:e.size}}));return i.length?{maxFileSize:{maxSize:e,actualSizes:i}}:null}},e.maxTotalSize=function(e){return function(t){var i=(null==t?void 0:t.value)?t.value.map((function(e){return e.size})).reduce((function(e,t){return e+t}),0):0;return e>=i?null:{maxTotalSize:{maxSize:e,actualSize:i}}}},e.required=function(e){var t;return(null===(t=null==e?void 0:e.value)||void 0===t?void 0:t.length)?null:{required:!0}},e}();e.BytePipe=s,e.FileValidators=p,e.NgxFileDragDropComponent=u,e.NgxFileDragDropModule=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-file-drag-drop.umd.min.js.map
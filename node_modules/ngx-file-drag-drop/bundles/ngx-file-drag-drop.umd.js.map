{"version":3,"file":"ngx-file-drag-drop.umd.js","sources":["../../../projects/ngx-file-drag-drop/src/lib/byte.pipe.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop/ngx-file-drag-drop.component.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop.module.ts","../../../projects/ngx-file-drag-drop/src/lib/validators.ts","../../../projects/ngx-file-drag-drop/src/public-api.ts","../../../projects/ngx-file-drag-drop/src/ngx-file-drag-drop.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'byte'\r\n})\r\nexport class BytePipe implements PipeTransform {\r\n  private unit = 'Bytes';\r\n\r\n  transform(value: string | number, decimals?: number | string): string {\r\n    value = value.toString();\r\n    if (parseInt(value, 10) >= 0) {\r\n      value = this.formatBytes(+value, +decimals);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\r\n  formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) { return '0 Bytes'; }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n}\r\n","import { Component, forwardRef, HostBinding, HostListener, ViewChild, Input, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { BytePipe } from '../byte.pipe';\r\n\r\n@Component({\r\n  selector: 'ngx-file-drag-drop',\r\n  templateUrl: './ngx-file-drag-drop.component.html',\r\n  styleUrls: ['./ngx-file-drag-drop.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxFileDragDropComponent),\r\n    multi: true\r\n  }]\r\n})\r\nexport class NgxFileDragDropComponent implements ControlValueAccessor {\r\n\r\n  constructor() { }\r\n  @HostBinding('class.disabled')\r\n  @Input()\r\n  get\r\n    disabled() {\r\n    return this._disabled;\r\n  }\r\n  set\r\n    disabled(val: boolean) {\r\n    this._disabled = coerceBooleanProperty(val);\r\n  }\r\n  @Input()\r\n  set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  get multiple() {\r\n    return this._multiple;\r\n  }\r\n\r\n  @Input()\r\n  set\r\n    displayFileSize(value: boolean) {\r\n    this._displayFileSize = coerceBooleanProperty(value);\r\n  }\r\n  get\r\n    displayFileSize() {\r\n    return this._displayFileSize;\r\n  }\r\n\r\n  @Input('activeBorderColor')\r\n  @HostBinding('style.border-color')\r\n  set borderColor(color: string) {\r\n    this._activeBorderColor = color;\r\n  }\r\n  get borderColor() {\r\n    return this.isDragover ? this._activeBorderColor : '#ccc';\r\n  }\r\n  get\r\n    files() {\r\n    return this._files;\r\n  }\r\n\r\n  @HostBinding('class.empty-input')\r\n  get isEmpty() {\r\n    return !this.files?.length;\r\n  }\r\n\r\n\r\n  // @HostBinding('class.drag-over')\r\n  get isDragover() {\r\n    return this._isDragOver;\r\n  }\r\n  set isDragover(value: boolean) {\r\n    if (!this.disabled) {\r\n      this._isDragOver = value;\r\n    }\r\n  }\r\n\r\n  @Output()\r\n  private valueChanged = new EventEmitter<File[]>();\r\n\r\n\r\n  @ViewChild('fileInputEl')\r\n  private fileInputEl: ElementRef;\r\n\r\n\r\n  // does no validation, just sets the hidden file input\r\n  @Input() accept = '*';\r\n\r\n  private _disabled = false;\r\n\r\n  _multiple = false;\r\n\r\n  @Input() emptyPlaceholder = `Drop file${this.multiple ? 's' : ''} or click to select`;\r\n\r\n  private _displayFileSize = false;\r\n\r\n\r\n  private _activeBorderColor = 'purple';\r\n\r\n\r\n\r\n  private _files: File[] = [];\r\n  private _isDragOver = false;\r\n\r\n  // https://angular.io/api/forms/ControlValueAccessor\r\n  private _onChange = (val: File[]) => { };\r\n  private _onTouched = () => { };\r\n\r\n  writeValue(files: File[]): void {\r\n    const fileArray = this.convertToArray(files);\r\n    if (fileArray.length < 2 || this.multiple) {\r\n      this._files = fileArray;\r\n      this.emitChanges(this._files);\r\n    }\r\n    else { throw Error('Multiple files not allowed'); }\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this._onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this._onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  private emitChanges(files: File[]) {\r\n    this.valueChanged.emit(files);\r\n    this._onChange(files);\r\n  }\r\n\r\n  addFiles(files: File[] | FileList | File) {\r\n\r\n    // this._onTouched();\r\n\r\n    const fileArray = this.convertToArray(files);\r\n\r\n    if (this.multiple) {\r\n      // this.errorOnEqualFilenames(fileArray);\r\n      const merged = this.files.concat(fileArray);\r\n      this.writeValue(merged);\r\n    }\r\n    else {\r\n      this.writeValue(fileArray);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  removeFile(file: File) {\r\n    const fileIndex = this.files.indexOf(file);\r\n    if (fileIndex >= 0) {\r\n      const currentFiles = this.files.slice();\r\n      currentFiles.splice(fileIndex, 1);\r\n      this.writeValue(currentFiles);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue([]);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  change(event: Event) {\r\n    event.stopPropagation();\r\n    this._onTouched();\r\n    const fileList: FileList = (event.target as HTMLInputElement).files;\r\n    if (fileList?.length) {\r\n      this.addFiles(fileList);\r\n    }\r\n    // clear it so change is triggered if same file is selected again\r\n    (event.target as HTMLInputElement).value = '';\r\n  }\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  @HostListener('dragover', ['$event'])\r\n  activate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  deactivate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  handleDrop(e) {\r\n    this.deactivate(e);\r\n    if (!this.disabled) {\r\n\r\n      const fileList = e.dataTransfer.files;\r\n      this.removeDirectories(fileList).then((files: File[]) => {\r\n        if (files?.length) {\r\n          this.addFiles(files);\r\n        }\r\n        this._onTouched();\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  open() {\r\n    if (!this.disabled) {\r\n      this.fileInputEl?.nativeElement.click();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // @HostListener('focusout')\r\n  // blur() {\r\n  //   console.log('blurred')\r\n  //   this._onTouched();\r\n  // }\r\n\r\n  // private errorOnEqualFilenames(files: File[]) {\r\n  //   if (this.files.some(file => files.some(file2 => file.name === file2.name))) {\r\n  //     throw Error('one of the provided filenames already exists')\r\n  //   }\r\n\r\n  //   for (let i = 0; i < files.length; i++) {\r\n  //     for (let j = i + 1; j < files.length; j++) {\r\n  //       if (files[i].name === files[j].name) {\r\n  //         throw Error(`can't add multiple files with same name`)\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  private removeDirectories(files: FileList) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const fileArray = this.convertToArray(files);\r\n\r\n      const dirnames = [];\r\n\r\n      const readerList = [];\r\n\r\n      for (let i = 0; i < fileArray.length; i++) {\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onerror = () => {\r\n          dirnames.push(fileArray[i].name);\r\n        };\r\n\r\n        reader.onloadend = () => addToReaderList(i);\r\n\r\n        reader.readAsArrayBuffer(fileArray[i]);\r\n      }\r\n\r\n      function addToReaderList(val: number) {\r\n        readerList.push(val);\r\n        if (readerList.length === fileArray.length) {\r\n          resolve(fileArray.filter((file: File) => !dirnames.includes(file.name)));\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  private convertToArray(files: FileList | File[] | File | null | undefined): File[] {\r\n    if (files) {\r\n      if (files instanceof File) {\r\n        return [files];\r\n      } else if (Array.isArray(files)) {\r\n        return files;\r\n      } else {\r\n        return Array.prototype.slice.call(files);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getFileName(file: File): string {\r\n    if (!this._displayFileSize) { return file.name; }\r\n\r\n    const size = new BytePipe().transform(file.size);\r\n    return `${file.name} (${size})`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxFileDragDropComponent } from './ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nimport { BytePipe } from './byte.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxFileDragDropComponent, BytePipe],\r\n  imports: [\r\n    CommonModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [NgxFileDragDropComponent, BytePipe]\r\n})\r\nexport class NgxFileDragDropModule { }\r\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n// @dynamic\r\nexport class FileValidators {\r\n    static fileExtension(ext: string[]): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            const validExtensions = ext.map(e => e.trim().toLowerCase());\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.map(file => file.name).filter(\r\n                fname => {\r\n                    const extension = fname.slice((fname.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n                    return !validExtensions.includes(extension);\r\n                }).map(name => ({ name, ext: name.slice((name.lastIndexOf('.') - 1 >>> 0) + 2) }));\r\n\r\n\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileExtension: {\r\n                        requiredExtension: ext.toString(),\r\n                        actualExtensions: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static uniqueFileNames(control: AbstractControl): ValidationErrors | null {\r\n\r\n        const fileNameArray = (control.value as File[]).map(file => file.name);\r\n\r\n        const duplicates = fileNameArray.reduce((acc, curr) => {\r\n            acc[curr] = acc[curr] ? acc[curr] + 1 : 1;\r\n            return acc;\r\n        }, {});\r\n\r\n\r\n\r\n        const duplicatesArray: { name: string, count: number }[] = (Object.entries(duplicates) as [string, number][])\r\n            .filter(arr => arr[1] > 1)\r\n            .map(arr => ({ name: arr[0], count: arr[1] }));\r\n\r\n        return !duplicatesArray.length\r\n            ? null\r\n            : {\r\n                uniqueFileNames: { duplicatedFileNames: duplicatesArray }\r\n            };\r\n    }\r\n\r\n    static fileType(types: string[] | RegExp): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            let regExp: RegExp;\r\n            if (Array.isArray(types)) {\r\n                const joinedTypes = types.join('$|^');\r\n                regExp = new RegExp(`$${joinedTypes}^`, 'i');\r\n            } else {\r\n                regExp = types;\r\n            }\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n\r\n\r\n            const invalidFiles = fileArray.filter(\r\n                file => !regExp.test(file.type)).map(file => ({ name: file.name, type: file.type }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileType: {\r\n                        requiredType: types.toString(),\r\n                        actualTypes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n\r\n\r\n    static maxFileCount(count: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const fileCount = control?.value ? (control.value as File[]).length : 0;\r\n            const result = count >= fileCount;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxFileCount: {\r\n                        maxCount: count,\r\n                        actualCount: fileCount\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxFileSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.filter(file => file.size > bytes).map(file => ({ name: file.name, size: file.size }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    maxFileSize: {\r\n                        maxSize: bytes,\r\n                        actualSizes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxTotalSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const size = control?.value ? (control.value as File[]).map(file => file.size).reduce((acc, i) => acc + i, 0) : 0;\r\n            const result = bytes >= size;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxTotalSize: {\r\n                        maxSize: bytes,\r\n                        actualSize: size\r\n                    }\r\n                };\r\n        };\r\n    }\r\n    static required(control: AbstractControl): ValidationErrors | null {\r\n        const count = control?.value?.length;\r\n        return count\r\n            ? null\r\n            : {\r\n                required: true\r\n            };\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-file-drag-drop\r\n */\r\n\r\nexport * from './lib/ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nexport * from './lib/ngx-file-drag-drop.module';\r\nexport * from './lib/validators';\r\nexport * from './lib/byte.pipe';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Pipe","EventEmitter","coerceBooleanProperty","Component","NG_VALUE_ACCESSOR","forwardRef","HostBinding","Input","Output","ViewChild","HostListener","NgModule","CommonModule","MatChipsModule","MatIconModule","MatTooltipModule"],"mappings":"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"}
{"version":3,"file":"ngx-file-drag-drop.js","sources":["../../../projects/ngx-file-drag-drop/src/lib/byte.pipe.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop/ngx-file-drag-drop.component.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop.module.ts","../../../projects/ngx-file-drag-drop/src/lib/validators.ts","../../../projects/ngx-file-drag-drop/src/public-api.ts","../../../projects/ngx-file-drag-drop/src/ngx-file-drag-drop.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'byte'\r\n})\r\nexport class BytePipe implements PipeTransform {\r\n  private unit = 'Bytes';\r\n\r\n  transform(value: string | number, decimals?: number | string): string {\r\n    value = value.toString();\r\n    if (parseInt(value, 10) >= 0) {\r\n      value = this.formatBytes(+value, +decimals);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\r\n  formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) { return '0 Bytes'; }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n}\r\n","import { Component, forwardRef, HostBinding, HostListener, ViewChild, Input, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { BytePipe } from '../byte.pipe';\r\n\r\n@Component({\r\n  selector: 'ngx-file-drag-drop',\r\n  templateUrl: './ngx-file-drag-drop.component.html',\r\n  styleUrls: ['./ngx-file-drag-drop.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxFileDragDropComponent),\r\n    multi: true\r\n  }]\r\n})\r\nexport class NgxFileDragDropComponent implements ControlValueAccessor {\r\n\r\n  constructor() { }\r\n  @HostBinding('class.disabled')\r\n  @Input()\r\n  get\r\n    disabled() {\r\n    return this._disabled;\r\n  }\r\n  set\r\n    disabled(val: boolean) {\r\n    this._disabled = coerceBooleanProperty(val);\r\n  }\r\n  @Input()\r\n  set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  get multiple() {\r\n    return this._multiple;\r\n  }\r\n\r\n  @Input()\r\n  set\r\n    displayFileSize(value: boolean) {\r\n    this._displayFileSize = coerceBooleanProperty(value);\r\n  }\r\n  get\r\n    displayFileSize() {\r\n    return this._displayFileSize;\r\n  }\r\n\r\n  @Input('activeBorderColor')\r\n  @HostBinding('style.border-color')\r\n  set borderColor(color: string) {\r\n    this._activeBorderColor = color;\r\n  }\r\n  get borderColor() {\r\n    return this.isDragover ? this._activeBorderColor : '#ccc';\r\n  }\r\n  get\r\n    files() {\r\n    return this._files;\r\n  }\r\n\r\n  @HostBinding('class.empty-input')\r\n  get isEmpty() {\r\n    return !this.files?.length;\r\n  }\r\n\r\n\r\n  // @HostBinding('class.drag-over')\r\n  get isDragover() {\r\n    return this._isDragOver;\r\n  }\r\n  set isDragover(value: boolean) {\r\n    if (!this.disabled) {\r\n      this._isDragOver = value;\r\n    }\r\n  }\r\n\r\n  @Output()\r\n  private valueChanged = new EventEmitter<File[]>();\r\n\r\n\r\n  @ViewChild('fileInputEl')\r\n  private fileInputEl: ElementRef;\r\n\r\n\r\n  // does no validation, just sets the hidden file input\r\n  @Input() accept = '*';\r\n\r\n  private _disabled = false;\r\n\r\n  _multiple = false;\r\n\r\n  @Input() emptyPlaceholder = `Drop file${this.multiple ? 's' : ''} or click to select`;\r\n\r\n  private _displayFileSize = false;\r\n\r\n\r\n  private _activeBorderColor = 'purple';\r\n\r\n\r\n\r\n  private _files: File[] = [];\r\n  private _isDragOver = false;\r\n\r\n  // https://angular.io/api/forms/ControlValueAccessor\r\n  private _onChange = (val: File[]) => { };\r\n  private _onTouched = () => { };\r\n\r\n  writeValue(files: File[]): void {\r\n    const fileArray = this.convertToArray(files);\r\n    if (fileArray.length < 2 || this.multiple) {\r\n      this._files = fileArray;\r\n      this.emitChanges(this._files);\r\n    }\r\n    else { throw Error('Multiple files not allowed'); }\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this._onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this._onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  private emitChanges(files: File[]) {\r\n    this.valueChanged.emit(files);\r\n    this._onChange(files);\r\n  }\r\n\r\n  addFiles(files: File[] | FileList | File) {\r\n\r\n    // this._onTouched();\r\n\r\n    const fileArray = this.convertToArray(files);\r\n\r\n    if (this.multiple) {\r\n      // this.errorOnEqualFilenames(fileArray);\r\n      const merged = this.files.concat(fileArray);\r\n      this.writeValue(merged);\r\n    }\r\n    else {\r\n      this.writeValue(fileArray);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  removeFile(file: File) {\r\n    const fileIndex = this.files.indexOf(file);\r\n    if (fileIndex >= 0) {\r\n      const currentFiles = this.files.slice();\r\n      currentFiles.splice(fileIndex, 1);\r\n      this.writeValue(currentFiles);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue([]);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  change(event: Event) {\r\n    event.stopPropagation();\r\n    this._onTouched();\r\n    const fileList: FileList = (event.target as HTMLInputElement).files;\r\n    if (fileList?.length) {\r\n      this.addFiles(fileList);\r\n    }\r\n    // clear it so change is triggered if same file is selected again\r\n    (event.target as HTMLInputElement).value = '';\r\n  }\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  @HostListener('dragover', ['$event'])\r\n  activate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  deactivate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  handleDrop(e) {\r\n    this.deactivate(e);\r\n    if (!this.disabled) {\r\n\r\n      const fileList = e.dataTransfer.files;\r\n      this.removeDirectories(fileList).then((files: File[]) => {\r\n        if (files?.length) {\r\n          this.addFiles(files);\r\n        }\r\n        this._onTouched();\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  open() {\r\n    if (!this.disabled) {\r\n      this.fileInputEl?.nativeElement.click();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // @HostListener('focusout')\r\n  // blur() {\r\n  //   console.log('blurred')\r\n  //   this._onTouched();\r\n  // }\r\n\r\n  // private errorOnEqualFilenames(files: File[]) {\r\n  //   if (this.files.some(file => files.some(file2 => file.name === file2.name))) {\r\n  //     throw Error('one of the provided filenames already exists')\r\n  //   }\r\n\r\n  //   for (let i = 0; i < files.length; i++) {\r\n  //     for (let j = i + 1; j < files.length; j++) {\r\n  //       if (files[i].name === files[j].name) {\r\n  //         throw Error(`can't add multiple files with same name`)\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  private removeDirectories(files: FileList) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const fileArray = this.convertToArray(files);\r\n\r\n      const dirnames = [];\r\n\r\n      const readerList = [];\r\n\r\n      for (let i = 0; i < fileArray.length; i++) {\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onerror = () => {\r\n          dirnames.push(fileArray[i].name);\r\n        };\r\n\r\n        reader.onloadend = () => addToReaderList(i);\r\n\r\n        reader.readAsArrayBuffer(fileArray[i]);\r\n      }\r\n\r\n      function addToReaderList(val: number) {\r\n        readerList.push(val);\r\n        if (readerList.length === fileArray.length) {\r\n          resolve(fileArray.filter((file: File) => !dirnames.includes(file.name)));\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  private convertToArray(files: FileList | File[] | File | null | undefined): File[] {\r\n    if (files) {\r\n      if (files instanceof File) {\r\n        return [files];\r\n      } else if (Array.isArray(files)) {\r\n        return files;\r\n      } else {\r\n        return Array.prototype.slice.call(files);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getFileName(file: File): string {\r\n    if (!this._displayFileSize) { return file.name; }\r\n\r\n    const size = new BytePipe().transform(file.size);\r\n    return `${file.name} (${size})`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxFileDragDropComponent } from './ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nimport { BytePipe } from './byte.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxFileDragDropComponent, BytePipe],\r\n  imports: [\r\n    CommonModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [NgxFileDragDropComponent, BytePipe]\r\n})\r\nexport class NgxFileDragDropModule { }\r\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n// @dynamic\r\nexport class FileValidators {\r\n    static fileExtension(ext: string[]): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            const validExtensions = ext.map(e => e.trim().toLowerCase());\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.map(file => file.name).filter(\r\n                fname => {\r\n                    const extension = fname.slice((fname.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n                    return !validExtensions.includes(extension);\r\n                }).map(name => ({ name, ext: name.slice((name.lastIndexOf('.') - 1 >>> 0) + 2) }));\r\n\r\n\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileExtension: {\r\n                        requiredExtension: ext.toString(),\r\n                        actualExtensions: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static uniqueFileNames(control: AbstractControl): ValidationErrors | null {\r\n\r\n        const fileNameArray = (control.value as File[]).map(file => file.name);\r\n\r\n        const duplicates = fileNameArray.reduce((acc, curr) => {\r\n            acc[curr] = acc[curr] ? acc[curr] + 1 : 1;\r\n            return acc;\r\n        }, {});\r\n\r\n\r\n\r\n        const duplicatesArray: { name: string, count: number }[] = (Object.entries(duplicates) as [string, number][])\r\n            .filter(arr => arr[1] > 1)\r\n            .map(arr => ({ name: arr[0], count: arr[1] }));\r\n\r\n        return !duplicatesArray.length\r\n            ? null\r\n            : {\r\n                uniqueFileNames: { duplicatedFileNames: duplicatesArray }\r\n            };\r\n    }\r\n\r\n    static fileType(types: string[] | RegExp): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            let regExp: RegExp;\r\n            if (Array.isArray(types)) {\r\n                const joinedTypes = types.join('$|^');\r\n                regExp = new RegExp(`$${joinedTypes}^`, 'i');\r\n            } else {\r\n                regExp = types;\r\n            }\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n\r\n\r\n            const invalidFiles = fileArray.filter(\r\n                file => !regExp.test(file.type)).map(file => ({ name: file.name, type: file.type }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileType: {\r\n                        requiredType: types.toString(),\r\n                        actualTypes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n\r\n\r\n    static maxFileCount(count: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const fileCount = control?.value ? (control.value as File[]).length : 0;\r\n            const result = count >= fileCount;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxFileCount: {\r\n                        maxCount: count,\r\n                        actualCount: fileCount\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxFileSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.filter(file => file.size > bytes).map(file => ({ name: file.name, size: file.size }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    maxFileSize: {\r\n                        maxSize: bytes,\r\n                        actualSizes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxTotalSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const size = control?.value ? (control.value as File[]).map(file => file.size).reduce((acc, i) => acc + i, 0) : 0;\r\n            const result = bytes >= size;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxTotalSize: {\r\n                        maxSize: bytes,\r\n                        actualSize: size\r\n                    }\r\n                };\r\n        };\r\n    }\r\n    static required(control: AbstractControl): ValidationErrors | null {\r\n        const count = control?.value?.length;\r\n        return count\r\n            ? null\r\n            : {\r\n                required: true\r\n            };\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-file-drag-drop\r\n */\r\n\r\nexport * from './lib/ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nexport * from './lib/ngx-file-drag-drop.module';\r\nexport * from './lib/validators';\r\nexport * from './lib/byte.pipe';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}